name: CI/CD Pipeline

on:
  # push:
  #   branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write
  # se futuramente for usar ambientes/deploy:
  # deployments: write

jobs:
  build-dotnet:
    name: Build & Test .NET Service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
      
      - name: Release Please
        id: release
        uses: google-github-actions/release-please-action@v4
        with:
          release-type: simple
          package-name: projectmanagement

      # Continous Integration
      - name: Restore dependencies
        run: dotnet restore ./src/ProjectManagement/ProjectManagement.Presentation/ProjectManagement.Presentation.csproj

      - name: Build
        run: dotnet build ./src/ProjectManagement/ProjectManagement.Presentation/ProjectManagement.Presentation.csproj --no-restore --configuration Release

      # Continous Delivery
      - name: Build Docker Image
        if: steps.release.outputs.release_created == 'true'
        run: |
          VERSION=${{ steps.release.outputs.tag_name }}
          echo "Building version: $VERSION"
          docker build --no-cache  --progress=plain -f ./src/ProjectManagement/Dockerfile -t ghcr.io/elyosemite/projectmanagement:latest -t ghcr.io/elyosemite/projectmanagement:$VERSION .

      - name: Push Docker Image
        if: steps.release.outputs.release_created == 'true'
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/elyosemite/projectmanagement:latest
          docker push ghcr.io/elyosemite/projectmanagement:${{ steps.release.outputs.tag_name }}
